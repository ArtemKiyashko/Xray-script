{
  "title": {
    "tip": "提示",
    "info": "信息",
    "warn": "警告",
    "error": "错误",
    "config": "配置",
    "route": "分流",
    "pass": "通过",
    "fail": "失败",
    "test": "测试",
    "multiple_values": "多个值请用英文逗号分隔"
  },
  "main": {
    "not_support": "当前脚本配置类型不是 SNI ，无法使用该功能"
  },
  "menu": {
    "choose": "请选择操作",
    "status": {
      "default": "默认",
      "not_installed": "未安装",
      "not_configured": "未配置",
      "enabled": "已启用",
      "disabled": "未启动"
    },
    "index": {
      "description": "Xray 管理脚本",
      "installation": "装载管理",
      "operation": "操作管理",
      "configuration": "配置管理",
      "option1": "完整安装",
      "option2": "仅安装/更新",
      "option3": "卸载",
      "option4": "启动",
      "option5": "停止",
      "option6": "重启",
      "option7": "管理客户端配置",
      "option8": "信息统计",
      "option9": "管理配置",
      "option0": "退出"
    },
    "full_installation": {
      "title": "安装流程",
      "option1": "一键安装",
      "option2": "自定义配置",
      "info1": "稳定版, Vision+Reality, 屏蔽 bt, cn, 广告, 开启 geodata 自动更新",
      "info2": "自选版本,自选配置"
    },
    "xray_version": {
      "title": "装载管理",
      "option1": "最新本",
      "option2": "稳定本",
      "option3": "自选版",
      "info1": "最新版包含了 pre-release 版本",
      "info2": "稳定版为最新发布的非 pre-release 版本",
      "info3": "自选版可能存在配置不兼容问题，请自行解决"
    },
    "protocol_config": {
      "title": "可选配置",
      "option1": "VLESS+mKCP+seed",
      "option2": "VLESS+Vision+REALITY",
      "option3": "VLESS+XHTTP+REALITY",
      "option4": "Trojan+XHTTP+REALITY",
      "option5": "双协议复合配置",
      "option6": "SNI分流复合配置",
      "info1": "mKCP 牺牲带宽来降低延迟。传输同样的内容，mKCP 一般比 TCP 消耗更多的流量",
      "info2": "XTLS(Vision) 解决 TLS in TLS 问题",
      "info3": "XHTTP 全场景通吃的时代正式到来(详情: https://github.com/XTLS/Xray-core/discussions/4113    )",
      "info3_1": "XHTTP 默认有多路复用，延迟比 Vision 低但多线程测速不如它",
      "info3_2": "此外 v2rayN&G 客户端有全局 mux.cool 设置，用 XHTTP 前记得关闭，不然连不上新版 Xray 服务端",
      "info4": "VLESS 替换为 Trojan",
      "info5": "利用 VLESS+Vision+REALITY 回落 VLESS+XHTTP 共用 443 端口",
      "info6": "通过 Nginx 的 SNI 分流共用 443 端口，实现 REALITY 直连与过 CDN 共存"
    },
    "web_config": {
      "title": "Web 配置",
      "option1": "Nginx 默认页面",
      "option2": "Cloudreve v3版",
      "option3": "Cloudreve v4版",
      "info1": "Cloudreve v3 版本自动生成管理员账号",
      "info2": "Cloudreve v4 版本首个注册的账户会被设置为管理员"
    },
    "config_management": {
      "title": "管理配置",
      "option1": "更新配置",
      "option2": "分流管理",
      "option3": "SNI 配置管理",
      "option4": "开/关 geodata 自动更新",
      "option5": "设置语言",
      "info1": "更新配置功能为整个配置的更新",
      "info2": "管理屏蔽或 WARP 分流",
      "info3": "包含 Nginx 更新，修改域名，修改 Web 配置等",
      "info4": "geodata 由 https://github.com/Loyalsoldier/v2ray-rules-dat  提供"
    },
    "route_management": {
      "title": "自定义分流",
      "option1": "开/关 WARP Proxy",
      "option2": "添加屏蔽 ip 分流",
      "option3": "添加屏蔽 domain 分流",
      "option4": "添加 WARP ip 分流",
      "option5": "添加 WARP domain 分流",
      "info1": "WARP Proxy 功能通过 Docker 部署, 开启时自动安装 Docker",
      "info2": "WARP Proxy 详情 https://github.com/haoel/haoel.github.io?tab=readme-ov-file#1043-docker-%E4%BB%A3%E7%90%86",
      "info3": "每次成功开启 WARP Proxy 都会重新申请 WARP 账号, 频繁操作可能导致 IP 被 Cloud­flare 拉黑",
      "info4": "添加关于 ip 的屏蔽分流, 相关分流添加在 ruleTag 为 block-ip 中",
      "info5": "添加关于 domain 的屏蔽分流, 相关分流添加在 ruleTag 为 block-domain 中",
      "info6": "(需要开启 WARP)添加关于 ip 的 WARP 分流, 相关分流添加在 ruleTag 为 warp-ip 中",
      "info7": "(需要开启 WARP)添加关于 domain 的 WARP 分流, 相关分流添加在 ruleTag 为 warp-domain 中"
    },
    "sni_config": {
      "title": "SNI 配置",
      "option1": "修改默认域名",
      "option2": "修改 CDN 域名",
      "option3": "更新 nginx",
      "option4": "开/关 nginx 自动更新",
      "option5": "修改 Web 配置",
      "option6": "重置 Cloudreve v3 版管理员数据",
      "info1": "Reality 对应的域名",
      "info2": "套用 CDN 的域名"
    }
  },
  "handler": {
    "script": {
      "config_update": "正在更新脚本配置"
    },
    "xray": {
      "config_update": "正在更新 Xray 配置"
    },
    "warp": {
      "status": "WARP PROXY 没有开启，无法添加 WARP 分流"
    },
    "geodata": {
      "close_cron": "成功停止 geodata 自动更新任务",
      "open_cron": "成功开启 geodata 自动更新任务",
      "update": "执行 geodata 更新"
    },
    "nginx": {
      "close_cron": "成功停止 nginx 自动更新任务",
      "open_cron": "成功开启 nginx 自动更新任务"
    }
  },
  "read": {
    "version": "自选版本(e.g. v1.0.0): ",
    "rules": "是否重置路由规则 [y/N] ",
    "block_bt": "是否开启 bittorrent 屏蔽 [Y/n] ",
    "block_cn": "是否开启国内 ip 屏蔽 [Y/n] ",
    "block_ad": "是否开启广告屏蔽 [Y/n] ",
    "auto_geo": "是否开启 geodata 自动更新功能 [Y/n] ",
    "port": "请输入 port (端口范围是 1-65535 ，默认: 443, mKCP随机生成): ",
    "uuid": "请输入 UUID (支持自定义字符串，默认自动生成): ",
    "fallback": "请输入 Fallback UUID (支持自定义字符串，默认自动生成): ",
    "seed": "请输入 seed (默认自动生成): ",
    "password": "请输入 password (默认自动生成): ",
    "target": "请输入目标域名 target (默认随机选择): ",
    "domain": "请输入网站域名 (供 Reality 使用): ",
    "cdn": "请输入网站域名 (供 CDN 使用): ",
    "email": "请输入用于注册 ZeroSSL 的邮箱: ",
    "short": "请输入 shortId (多个值请用英文逗号分隔，默认自动生成): ",
    "short_id_tip": "支持输入 0 到 8 自动生成对应倍数长度的 shortId",
    "path": "请输入 path (默认自动生成): ",
    "warp_ip": "请输入分流到 WARP 的 ip",
    "warp_domain": "请输入分流到 WARP 的 domain",
    "block_ip": "请输入分流到 block 的 ip",
    "block_domain": "请输入分流到 block 的 domain"
  },
  "share": {
    "client": "客户端配置",
    "extra": "XHTTP 扩展配置(extra)",
    "link": "分享链接",
    "qr": "二维码"
  },
  "client_management": {
    "title": "客户端配置管理",
    "option1": "查看所有客户端",
    "option2": "添加新客户端",
    "option3": "删除客户端",
    "option4": "生成分享链接",
    "option0": "返回主菜单",
    "add": {
      "enter_name": "请输入客户端名称",
      "name_exists": "客户端名称已存在，请使用其他名称",
      "success": "客户端添加成功",
      "fail": "客户端添加失败"
    },
    "delete": {
      "select_client": "请选择要删除的客户端编号",
      "confirm": "确定要删除客户端 '${name}' 吗？(y/N)",
      "success": "客户端删除成功",
      "fail": "客户端删除失败",
      "not_found": "未找到指定的客户端"
    },
    "list": {
      "no_clients": "当前没有配置任何客户端",
      "header": "客户端列表",
      "format": "${index}. ${name} (UUID: ${uuid})",
      "shortid_preserved": "注意：删除客户端时不会删除对应的 ShortID，以保持索引对应关系"
    },
    "share": {
      "select_client": "请选择要生成分享链接的客户端编号",
      "generating": "正在生成分享链接...",
      "not_found": "未找到指定的客户端"
    }
  },
  "check": {
    "ip": {
      "check": "正在检查 IP 地址合法性：",
      "ipv4_valid": "IPv4 地址合法：",
      "ipv6_valid": "IPv6 地址合法：",
      "invalid": "IP 地址格式不合法："
    },
    "port": {
      "check": "正在检查端口合法性：",
      "valid": "端口号合法：",
      "empty": "输入值为空，将自动配置端口",
      "range_error": "端口号必须在 1-65535 之间："
    },
    "uuid": {
      "check": "正在检查 UUID 类型：",
      "string": "输入值为普通字符串，将使用 Xray 映射生成 UUID",
      "empty": "输入值为空，将自动生成一份 UUID",
      "valid": "UUID 合法："
    },
    "password": {
      "check": "正在检查密码合法性：",
      "valid": "密码格式合法：",
      "empty": "输入值为空，将自动生成密码",
      "space_error": "密码不能包含空格：",
      "length_error": "密码长度必须大于等于 8 个字符："
    },
    "path": {
      "check": "正在检查路径合法性：",
      "valid": "路径格式合法：",
      "empty": "路径为空，将自动生成随机路径",
      "space_error": "路径不能包含空格：",
      "length_error": "路径长度不能超过 128 个字符：",
      "char_error": "路径包含非法字符（只允许字母、数字、斜杠、连字符、下划线、点）：",
      "double_slash_error": "路径不能包含连续斜杠："
    },
    "short": {
      "check": "正在检查 shortId 合法性：",
      "valid": "shortId 合法：",
      "empty": "shortId 为空，符合要求",
      "digit": "shortId 为 0~8 之间的个位数：",
      "length_error": "长度必须为 2~16 位偶数：",
      "hex_error": "包含非法字符（非十六进制）："
    },
    "domain": {
      "empty": "输入值为空，将随机在配置中选择一个目标域名",
      "format_error": "域名格式不合法：",
      "resolve": "正在解析域名：",
      "resolve_fail": "域名解析失败：",
      "security_check": "正在检查域名安全性：",
      "security_pass": "域名 ${domain} 安全性检查通过"
    },
    "tcp": {
      "connect_check": "正在测试 TCP 连接：",
      "connect_fail": "无法连接到 ${domain}:443"
    },
    "tls": {
      "info": "正在获取 TLS 信息：",
      "error": "TLS 连接失败，可能不支持 TLS 1.3：",
      "pass": "支持 TLS 1.3",
      "key_exchange_warn": "未使用 X25519 密钥交换：",
      "key_exchange_pass": "使用 X25519 密钥交换"
    },
    "dns": {
      "check_start": "正在检查域名解析是否指向本机：",
      "resolution_fail": "域名解析失败：",
      "check_pass": "域名 ${domain} 解析检查通过"
    },
    "config": {
      "check": "正在检查 Xray 配置原文件是否存在：",
      "exist": "Xray 配置原文件存在：",
      "not_exist": "Xray 配置原文件不存在："
    },
    "version": {
      "check": "正在检查 Xray 版本是否存在：",
      "exist": "Xray 版本存在：v",
      "not_exist": "Xray 版本不存在：v"
    },
    "email": {
      "check": "正在校验电子邮箱合法性：",
      "valid": "电子邮箱格式合法：",
      "empty": "电子邮箱不能为空",
      "format_error": "电子邮箱格式不合法："
    }
  },
  "docker": {
    "install": {
      "start": "正在安装 Docker",
      "centos8_fix": "检测到 CentOS 8，正在修复安装脚本兼容性问题",
      "dry_run": "执行安装前检查（dry-run）",
      "running": "正在运行 Docker 安装脚本"
    },
    "warp": {
      "build": {
        "start": "正在构建 WARP 镜像",
        "fail": "WARP 镜像构建失败"
      },
      "enable": {
        "start": "正在开启 WARP 容器",
        "success": "WARP 容器已启用 (IP: ${container_ip})"
      },
      "disable": {
        "stop": "正在停止 WARP 容器",
        "success": "WARP 容器已停止"
      }
    },
    "cloudreve_v3": {
      "create_dir": "创建 Cloudreve v3 相关目录。",
      "start": "启动 Cloudreve v3 服务",
      "stop": "停止 Cloudreve v3 服务",
      "admin_info": "用户名: ${username} , 密码: ${password}",
      "aria2_token": "aria2 token: ${token}",
      "reset": "正在重置 Cloudreve v3 信息",
      "purge": "卸载 Cloudreve v3 服务",
      "start_service": "启动 Cloudreve v3 服务",
      "install_fallback": "未找到 Cloudreve v3 相关目录"
    },
    "cloudreve_v4": {
      "create_dir": "创建 Cloudreve v4 相关目录。",
      "start": "启动 Cloudreve v4 服务",
      "stop": "停止 Cloudreve v4 服务",
      "update": "更新 Cloudreve v4 镜像",
      "purge": "卸载 Cloudreve v4 服务",
      "start_service": "启动 Cloudreve v4 服务",
      "install_fallback": "未找到 Cloudreve v4 相关目录"
    }
  },
  "ssl": {
    "install": {
      "already_installed": "acme.sh 已安装。",
      "start": "正在安装 acme.sh...",
      "fail_download": "acme.sh 安装失败。",
      "fail_autoupgrade": "acme.sh 自动升级设置失败。",
      "fail_set_ca": "设置默认 CA 失败。"
    },
    "update": {
      "start": "正在更新 acme.sh...",
      "fail": "acme.sh 更新失败。"
    },
    "purge": {
      "start": "正在卸载 acme.sh...",
      "fail_disable_autoupgrade": "禁用 acme.sh 自动升级失败。",
      "fail_uninstall_cmd": "acme.sh 卸载命令执行失败。",
      "success": "acme.sh 及相关目录已删除。"
    },
    "issue": {
      "no_domain": "未指定域名，无法申请证书。",
      "start": "正在签发 SSL 证书...",
      "fail_create_acme_dir": "无法创建 ACME 验证目录: ${ACME_WEBROOT_PATH}",
      "fail_create_cert_dir": "无法创建 SSL 证书目录: ${cert_path}",
      "fail_backup_nginx": "无法备份 Nginx 配置文件: ${nginx_conf}",
      "fail_reload_nginx": "Nginx 重载失败，请检查配置文件。",
      "fail_start_nginx": "Nginx 启动失败，请检查配置文件。",
      "fail_first_attempt": "首次签发失败，尝试启用调试模式重新签发...",
      "fail_ecc_issue": "ECC 证书申请失败。",
      "fail_install_cert": "安装证书失败。"
    },
    "renew": {
      "start": "正在强制续期所有 SSL 证书...",
      "fail": "续期失败。"
    },
    "stop_renew": {
      "start": "正在停止续期指定的 SSL 证书...",
      "fail_cmd": "acme.sh 停止续期命令执行失败。",
      "no_domain": "未指定域名，无法停止续期。"
    },
    "check_cron": {
      "start": "正在检查自动续期的定时任务设置..."
    },
    "status": {
      "no_domain": "检查状态时未提供域名。"
    },
    "info": {
      "no_domain": "显示信息时未提供域名。",
      "start": "正在显示 SSL 证书信息..."
    },
    "help": {
      "usage": "用法: ${script_name} [命令] [选项]",
      "commands_title": "命令",
      "cmd_install": "安装 acme.sh",
      "cmd_update": "更新 acme.sh",
      "cmd_purge": "卸载 acme.sh 并删除相关目录",
      "cmd_issue": "签发/更新 SSL 证书",
      "cmd_renew": "强制续期所有 SSL 证书",
      "cmd_stop_renew": "停止续期指定的 SSL 证书",
      "cmd_check_cron": "检查自动续期的定时任务设置",
      "cmd_info": "显示 SSL 证书信息",
      "cmd_status": "检查 SSL 证书状态",
      "cmd_help": "显示此帮助信息",
      "options_title": "选项",
      "opt_domain": "指定域名",
      "opt_email": "指定 acme.sh 账户邮箱"
    }
  },
  "nginx": {
    "compile": {
      "install_deps": "正在安装编译依赖项...",
      "fetch_versions": "检索 Nginx 和 OpenSSL 的最新版本。",
      "download_nginx": "下载最新版本的 Nginx。",
      "download_openssl": "下载最新版本的 OpenSSL。",
      "fetch_brotli": "检索 ngx_brotli 并构建依赖项。",
      "configure": "配置 Nginx 编译选项。",
      "swap": "申请 512MB 虚拟内存。",
      "start_compile": "编译 Nginx。",
      "executing": "正在执行命令: ${cmd}",
      "fail_exec_cmd": "执行命令 (${cmd}) 失败，请检查并重试。"
    },
    "install": {
      "start_install": "安装 Nginx。"
    },
    "update": {
      "fetch_versions": "检索 Nginx 和 OpenSSL 的最新版本。",
      "read_current_versions": "读取 Nginx 和 OpenSSL 的当前版本。",
      "check_update": "判断是否需要更新。",
      "start_update": "更新 Nginx。",
      "smooth_upgrade": "正在平滑升级 Nginx...",
      "no_old_process": "未找到旧的 Nginx 进程。跳过后续步骤。"
    },
    "purge": {
      "start_purge": "正在卸载 Nginx...",
      "purged": "Nginx 已卸载。"
    },
    "service": {
      "configure": "配置 Nginx systemd 服务。",
      "complete": "Nginx systemd 服务配置完成。"
    },
    "os": {
      "unsupported_os": "不支持的操作系统。",
      "unsupported_ubuntu": "不支持的操作系统，请切换到 Ubuntu 20+ 并重试。",
      "unsupported_debian": "不支持的操作系统，请切换到 Debian 10+ 并重试。",
      "unsupported_centos": "不支持的操作系统，请切换到 CentOS 7+ 并重试。"
    },
    "backup_files": {
      "backup": "备份"
    },
    "main": {
      "invalid_option": "无效选项: '${option}'。使用 '$0 --help' 查看用法信息。"
    },
    "help": {
      "usage": "用法: ${script_name} [选项]",
      "options_title": "选项",
      "opt_install": "安装 Nginx",
      "opt_update": "更新 Nginx",
      "opt_brotli": "启用 Brotli 压缩 (与 --install 或 --update 一起使用)",
      "opt_purge": "卸载 Nginx",
      "opt_help": "显示帮助信息"
    }
  }
}
